<div id="metastanza-interaction"></div>
<script type="text/javascript">
  (() => {
    const togoidApi = "https://integbio.jp/togosite/sparqlist/api/togoid_route_sparql";

    const type = "{{type}}";
    const id = "{{id}}";
    const typeInfo = {
      "uniprot": {
        "label": "UniProt",
        "dataUrl": "https://integbio.jp/togosite/sparqlist/api/togosite-protein-summary-uniprot?uniprot=",
        "columns": [
          {"id": "id", "label": "UniProt ID", "link": "entry"},
          {"id": "mnemonic", "label": "Mnemonic"},
    {"id": "full_name", "label": "Protein name"},
    {"id": "length"},
    {"id": "mass", "label": "Mass (Da)"},
    {"id": "citation_number", "label": "Citations"},
    {"id": "biological_process", "label": "Biological process", "escape": false},
    {"id": "molecular_function", "label": "Molecular function", "escape": false},
    {"id": "cellular_component", "label": "Cellular component", "escape": false},
    {"id": "isolated_tissue", "label": "Isolated tissue", "escape": false}
        ]
      },
      "chebi": {
        "label": "ChEBI",
        "dataUrl": "https://integbio.jp/togosite/sparqlist/api/test_chemical_details5?type=chebi&id=",
        "columns": [
          {"id": "ChEBI_ID"},
    {"id": "ChEBI_molecular_formula"},
    {"id": "ChEBI_label"},
    {"id": "ChEBI_synonym"},
    {"id": "ChEBI_mass"},
    {"id": "ChEBI_smiles"},
    {"id": "ChEBI_inchi"},
    {"id": "ChEBI_altid"}
        ]
      },
      "interactions": {
        "label": "Interactions",
        "dataUrl": "https://integbio.jp/togosite/sparqlist/api/togosite_interaction_summary",
        "columns": [
          {"id": "interaction", "label": "Interaction"},
    {"id": "details", "label": "Detail", "link": "details_link"},
    {"id": "target", "label": "Target", "escape": false}
        ]
      }
    }

    const fetchReq = async (url, body) => {
      const options = {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }
      if (body) options.body = body;
      return await fetch(url, options).then(res=>res.json());
    }

    const appendStanza = (stanzaDiv, metastanza, id, typelabel, columns, dataUrl, popup, pageSizeOption) => {
      let title = document.createElement("h2");
      title.innerHTML = typelabel;
      stanzaDiv.appendChild(title);
      let stanza = document.createElement("togostanza-" + metastanza);
      stanza.setAttribute("data-type", "json");
      stanza.setAttribute("format-key", "true");
      stanza.setAttribute("columns", JSON.stringify(columns));
      stanza.setAttribute("data-url", dataUrl);
      stanza.setAttribute('custom-css-url', '/css/stanza.css');
      if (pageSizeOption) {
        stanza.setAttribute("page-size-option", pageSizeOption);
        stanza.setAttribute("page-slider", true);
      }
      if (popup) stanza.classList.add("popup");
      stanzaDiv.appendChild(stanza);
    }

    const renderStanzas = async (stanzaDiv, id, type) => {
      // title
      let title = document.createElement("h1");
      title.innerHTML = "Interaction";
      stanzaDiv.appendChild(title);

      const header = document.createElement('h2');
      const headerText = document.createTextNode('Selected Key Uniprot: ' + id);
      header.appendChild(headerText);
      stanzaDiv.appendChild(header);

      // popup stanza
      appendStanza(stanzaDiv, "hash-table", id, typeInfo[type].label, typeInfo[type].columns, typeInfo[type].dataUrl + id, true);
      appendStanza(stanzaDiv, "pagination-table", id, typeInfo["interactions"].label, typeInfo["interactions"].columns, typeInfo["interactions"].dataUrl + "?type=" + type + "&id=" + id, false, "10,20,50,100");
    }

    renderStanzas(document.getElementById("metastanza-interaction"), id, type);
  })()
</script>
